// Задание 1: В базе данных Redis подберите коллекцию для подсчета посещений с определенных IP-адресов.

// С помощью команды HMSET создаем хэш-таблицу.
// Не уверен, что привильно понял условие. В данном случае ip - ключ, а значение - счетчик посещений, который будет инкрементировать их при каждом совпадении по ip

HMSET ip "111.111.111.111" 10 "222.222.222.222"  2 "000.000.222.222" 5

// Проверка
HGETALL ip

//----------------------------------------------------------------------------------------------------------




// Задание 2: При помощи базы данных Redis решите задачу поиска имени пользователя по электронному адресу и наоборот,
// поиск электронного адреса пользователя по его имени.

// Беглый поиск дал понять, что в направлении ключ-значение все ищется прекрасно,
// но в обратную сторону - приходится использовать костыли. Применю самый простой, хотя понимаю что решение далеко не лучшее.
// Просто создам разнонаправленные пары ключ-значение.

// Создадим хэш-таблицу email - username 
HMSET users "user1@mail.ru" "user1" "user2@mail.ru" "user2" "user3@mail.ru" "user3"
// Поиск по майлу
HMGET users user1@mail.ru

// Создадим хэш-таблицу username - email
HMSET email "user1" "user1@mail.ru" "user2" "user2@mail.ru" "user3" "user3@mail.ru" 
// Поиск по майлу
HMGET email user2

// Таким образом, поиск работает без перебора, в обе стороны. Но "цена" высокая - дублирование данных.
